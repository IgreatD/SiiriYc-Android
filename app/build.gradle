apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def debugConfig = rootProject.ext.debug

def releaseConfig = rootProject.ext.release

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("keystore.properties")
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))

static def buildTime() {
    def date = new Date()
    def formatDate = date.format("yyyyMMddHHmmss")
    return formatDate
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
//    buildToolsVersion rootProject.ext.android["buildToolsVersion"]

    useLibrary 'org.apache.http.legacy'

    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    defaultConfig {
        applicationId "com.yc.wuhanyc"
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]
        manifestPlaceholders = [
                JPUSH_PKGNAME: 'com.yc.wuhanyc',
                JPUSH_APPKEY : "cb70ad6a07bdf0de904dd1db",//值来自开发者平台取得的AppKey
                JPUSH_CHANNEL: "default_developer",
        ]

        flavorDimensions "default"
        ndk {
            //选择要添加的对应 cpu 类型的 .so 库。
            abiFilters 'armeabi', 'armeabi-v7a', 'arm64-v8a', 'x86'
            // 还可以添加 'x86', 'x86_64', 'mips', 'mips64'
        }
    }

    productFlavors {
        "172.16.40.23" {
            buildConfigField "String", "WEBVIEW_URL", debugConfig['webViewUrl']
        }

        "117.158.214.190" {
            buildConfigField "String", "WEBVIEW_URL", releaseConfig['webViewUrl']
        }
    }

    productFlavors.all { flavor ->
        flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            buildConfigField "String", "WEBVIEW_URL", debugConfig['webViewUrl']
            minifyEnabled false
        }
        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (!variant.buildType.isDebuggable()) {
                def name = "运维助手"
                def version = "版本__${variant.versionCode}"
                def flavor = "渠道__${variant.flavorName}"
                def time = "打包时间__${buildTime()}"
                def typeName = buildType.name
                variant.getPackageApplication().outputDirectory = new File(project.rootDir.absolutePath + "/apk/" + typeName)
                outputFileName = "${name}-${version}-${flavor}-${time}_${typeName}.apk"
            }
        }
    }

    lintOptions {
        disable 'InvalidPackage'
        disable "ResourceType"
        disable 'MissingTranslation'
        disable 'ExtraTranslation'
        abortOnError false
    }

    dexOptions {
        javaMaxHeapSize "4g"
        jumboMode = true
        preDexLibraries = false
        additionalParameters = [
                '--multi-dex',
                '--set-max-idx-number=48000'
        ]
    }
}

dependencies {
    implementation project(":push")
    implementation project(':lib_update')
    implementation project(':lib_core')
    implementation project(":record")
    kapt rootProject.ext.dependencies["dagger2-compiler"]
    kapt 'com.github.bumptech.glide:compiler:4.9.0'
    implementation 'me.jessyan:retrofit-url-manager:1.4.0'
}